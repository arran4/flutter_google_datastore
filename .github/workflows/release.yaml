on:
  push:
    tags:
      - v*

permissions:
  contents: write

env:
  FLUTTER_SDK_VERSION: '3.32.2'

jobs:
  windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dart-lang/setup-dart@v1
        with:
          sdk: '3.7.0'
      - uses: subosito/flutter-action@v2
        with:
          cache: true
          flutter-version: ${{ env.FLUTTER_SDK_VERSION }}

      - name: Set up environment vars
        shell: bash
        run: |
          TAG_NAME=$(echo ${GITHUB_REF#refs/tags/v})
          VERSION="$TAG_NAME"
          echo "SEMANTIC_VERSION=$TAG_NAME" >> $GITHUB_ENV
          echo "FLUTTER_VERSION=$VERSION" >> $GITHUB_ENV
          echo "FLUTTER_APP_VERSION=$VERSION" >> $GITHUB_ENV
          echo "GITHUB_REPOSITORY_NAME=${GITHUB_REPOSITORY#$GITHUB_REPOSITORY_OWNER/}" >> $GITHUB_ENV

      - name: Update version number
        shell: bash
        run: |
          choco install sed make yq -y
          yq -i '.version = strenv(SEMANTIC_VERSION)' pubspec.yaml

      - name: Release On Windows
        run: |
          flutter pub get
          flutter config --enable-windows-desktop
          dart pub global activate fastforge
          fastforge release --name onwindows
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

  linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dart-lang/setup-dart@v1
        with:
          sdk: '3.7.0'
      - uses: subosito/flutter-action@v2
        with:
          cache: true
          flutter-version: ${{ env.FLUTTER_SDK_VERSION }}

      - name: Install Dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y appstream clang cmake desktop-file-utils fakeroot fuse gir1.2-appindicator3-0.1 libappindicator3-1 libappindicator3-dev libarchive-tools libgdk-pixbuf2.0-dev libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev libgtk-3-dev libjsoncpp25 libjsoncpp-dev libmpv-dev libnotify-bin libnotify-dev libsecret-1-0 libsecret-1-dev libunwind-dev locate make mpv ninja-build patchelf pkg-config python3-pip python3-setuptools strace tar xmlstarlet

      - name: Install AppImage Tool
        run: |
          wget -O appimagetool "https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage"
          chmod +x appimagetool
          mv -v appimagetool /usr/local/bin/

      - name: Set up environment vars
        run: |
          TAG_NAME=$(echo ${GITHUB_REF#refs/tags/v})
          VERSION="$TAG_NAME"
          echo "SEMANTIC_VERSION=$TAG_NAME" >> $GITHUB_ENV
          echo "FLUTTER_VERSION=$VERSION" >> $GITHUB_ENV
          echo "FLUTTER_APP_VERSION=$VERSION" >> $GITHUB_ENV
          echo "GITHUB_REPOSITORY_NAME=${GITHUB_REPOSITORY#$GITHUB_REPOSITORY_OWNER/}" >> $GITHUB_ENV

      - name: Update version number
        run: |
          curl -sS https://webi.sh/yq | sh
          yq -i '.version = strenv(SEMANTIC_VERSION)' pubspec.yaml

      - name: Release On Linux
        run: |
          flutter pub get
          dart pub global activate fastforge
          fastforge release --name onlinux
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

  flatpak:
    runs-on: ubuntu-latest
    needs: linux
    steps:
      - uses: actions/checkout@v4
      - uses: dart-lang/setup-dart@v1
        with:
          sdk: '3.7.0'
      - uses: subosito/flutter-action@v2
        with:
          cache: true
          flutter-version: ${{ env.FLUTTER_SDK_VERSION }}
      - name: Install Flatpak tools
        run: |
          sudo apt-get update -y
          sudo apt-get install -y flatpak flatpak-builder ostree gpg git
      - name: Set up environment vars
        run: |
          TAG_NAME=$(echo ${GITHUB_REF#refs/tags/v})
          VERSION="$TAG_NAME"
          echo "SEMANTIC_VERSION=$TAG_NAME" >> $GITHUB_ENV
          echo "FLUTTER_VERSION=$VERSION" >> $GITHUB_ENV
          echo "FLUTTER_APP_VERSION=$VERSION" >> $GITHUB_ENV
          echo "GITHUB_REPOSITORY_NAME=${GITHUB_REPOSITORY#$GITHUB_REPOSITORY_OWNER/}" >> $GITHUB_ENV
      - name: Import GPG key
        if: secrets.FLATPAK_GPG_KEY != ''
        run: |
          echo "${{ secrets.FLATPAK_GPG_KEY }}" | base64 -d | gpg --batch --import
      - name: Build Flatpak
        run: |
          flatpak-builder --force-clean --repo=repo build-dir linux/packaging/flatpak/com.arran4.FlutterGoogleDatastore.yml
          flatpak build-bundle repo FlutterGoogleDatastore.flatpak com.arran4.FlutterGoogleDatastore $SEMANTIC_VERSION
      - name: Push Flatpak to repository
        env:
          FLATPAK_REPO_URL: ${{ secrets.FLATPAK_REPO_URL }}
          FLATPAK_GPG_KEY_ID: ${{ secrets.FLATPAK_GPG_KEY_ID }}
        run: |
          flatpak remote-add --if-not-exists release "$FLATPAK_REPO_URL" || true
          flatpak build-push --gpg-sign="$FLATPAK_GPG_KEY_ID" release repo com.arran4.FlutterGoogleDatastore
      - name: Upload Flatpak bundle
        run: |
          gh release upload "$GITHUB_REF_NAME" FlutterGoogleDatastore.flatpak --clobber
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

  macos:
    runs-on: macos-15
    steps:
      - uses: actions/checkout@v4
      - uses: dart-lang/setup-dart@v1
        with:
          sdk: '3.7.0'
      - uses: subosito/flutter-action@v2
        with:
          cache: true
          flutter-version: ${{ env.FLUTTER_SDK_VERSION }}

      - name: Dependencies
        run: |
          python3 -m pip install --break-system-packages setuptools
          npm install --break-system-packages -g appdmg

      - name: Set version environment vars
        run: |
          TAG_NAME=$(echo ${GITHUB_REF#refs/tags/v})
          VERSION="$TAG_NAME"
          echo "SEMANTIC_VERSION=$TAG_NAME" >> $GITHUB_ENV
          echo "FLUTTER_VERSION=$VERSION" >> $GITHUB_ENV
          echo "FLUTTER_APP_VERSION=$VERSION" >> $GITHUB_ENV
          echo "GITHUB_REPOSITORY_NAME=${GITHUB_REPOSITORY#$GITHUB_REPOSITORY_OWNER/}" >> $GITHUB_ENV

      - name: Update version number
        run: |
          brew install yq
          yq -i '.version = strenv(SEMANTIC_VERSION)' pubspec.yaml

      - name: Release On Mac OS X
        run: |
          flutter pub get
          flutter config --enable-macos-desktop
          dart pub global activate fastforge
          fastforge release --name onmac
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

  release:
    runs-on: ubuntu-latest
    needs:
      - windows
      - linux
      - flatpak
      - macos
    steps:
      - uses: actions/checkout@v4
      - name: No longer draft
        run: |
          gh release edit "$(echo ${GITHUB_REF#refs/tags/})" --draft=false
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
